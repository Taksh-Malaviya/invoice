import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:get/get.dart';
import 'package:get/get_core/src/get_main.dart';

import 'package:google_sign_in/google_sign_in.dart';
import 'package:invoice_generator/routes/routes.dart';

import '../../colors/colours.dart';

final FirebaseAuth _auth = FirebaseAuth.instance;
var user = Rxn<User>();

void onInit() {
  user.value = _auth.currentUser;
  _auth.authStateChanges().listen((User? newUser) {
    user.value = newUser;
  });
}

Future<void> signInAnonymously() async {
  try {
    if (user.value != null) {
      print("✅ User already signed in: ${user.value?.uid}");
      Get.offNamed('/home');
      return;
    }

    UserCredential userCredential = await _auth.signInAnonymously();
    user.value = userCredential.user;
    print("✅ Signed in anonymously: ${userCredential.user?.uid}");
    Get.offNamed('/home');
  } on FirebaseAuthException catch (e) {
    String errorMessage = "An error occurred: ${e.message}";
    if (e.code == "operation-not-allowed") {
      errorMessage = "Anonymous sign-in is disabled in Firebase.";
    }

    Get.snackbar(
      "Login Error",
      errorMessage,
      snackPosition: SnackPosition.BOTTOM,
      duration: const Duration(seconds: 3),
    );
  }
}

final GoogleSignIn googleSignIn = GoogleSignIn();

Future<void> googleSignInUser() async {
  try {
    final GoogleSignInAccount? googleUser = await googleSignIn.signIn();

    if (googleUser == null) {
      Get.snackbar(
        "Login Cancelled",
        "Google Sign-In was cancelled.",
        snackPosition: SnackPosition.BOTTOM,
      );

      return;
    }

    final GoogleSignInAuthentication googleAuth =
        await googleUser.authentication;

    final OAuthCredential credential = GoogleAuthProvider.credential(
      accessToken: googleAuth.accessToken,
      idToken: googleAuth.idToken,
    );

    await FirebaseAuth.instance.signInWithCredential(credential);

    Get.offNamed('/home');
  } catch (e) {
    Get.snackbar(
      "Login Failed",
      "Failed to sign in with Google. Please try again.",
      snackPosition: SnackPosition.BOTTOM,
    );
  }
}

class Intro extends StatefulWidget {
  const Intro({super.key});

  @override
  State<Intro> createState() => _IntroState();
}

class _IntroState extends State<Intro> {
  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        backgroundColor: black,
        body: Padding(
          padding: const EdgeInsets.all(16),
          child: Column(
            children: [
              SizedBox(height: 30.h),
              Row(
                children: [
                  Text(
                    "Explore Now",
                    style: lato(
                      color: white,
                      fontWeight: FontWeight.bold,
                      fontSize: 36,
                    ),
                  ),
                ],
              ),
              SizedBox(height: 10),
              Row(
                children: [
                  Text(
                    "Join Name Today",
                    style: lato(
                      color: white,
                      fontWeight: FontWeight.bold,
                      fontSize: 22,
                    ),
                  ),
                ],
              ),
              SizedBox(height: 30),
              Column(
                children: [
                  Padding(
                    padding: const EdgeInsets.all(16),
                    child: SizedBox(
                      height: 61,
                      width: 280,
                      child: ElevatedButton.icon(
                        onPressed: () {
                          googleSignInUser();
                        },
                        icon: Image.network(
                          'https://tse1.mm.bing.net/th?id=OIP.t4Z5Wlv7qFqdBCKwFdKkYAHaHa&pid=Api&P=0&h=180',
                          height: 28,
                        ),
                        label: Text(
                          "Sign in with Google",
                          style: lato(
                            fontSize: 15.sp,
                            color: black,
                            fontWeight: FontWeight.normal,
                          ),
                        ),
                        style: ElevatedButton.styleFrom(

                          padding: EdgeInsets.symmetric(vertical: 14),
                          backgroundColor: white,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(50),
                          ),
                        ),
                      ),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(16),
                    child: SizedBox(
                      height: 61,
                      width: 280,
                      child: ElevatedButton.icon(
                        onPressed: () {
                          signInAnonymously();
                        },
                        icon: Image.network(
                          'https://tse2.mm.bing.net/th?id=OIP.5oh4OARW4iNwMSe4BzpPZQHaHa&pid=Api&P=0&h=180',
                          height: 28,
                        ),
                        label: Text(
                          "Sign in as A Guest",
                          style: lato(
                            fontSize: 15.sp,
                            color: black,
                            fontWeight: FontWeight.normal,
                          ),
                        ),
                        style: ElevatedButton.styleFrom(
                          padding: EdgeInsets.symmetric(vertical: 14),
                          backgroundColor: white,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(50),
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),

              Padding(
                padding: const EdgeInsets.all(16),
                child: Divider(color: white),
              ),
              GestureDetector(
                onTap: () {
                  Get.offNamed(Routes.register);
                },
                child: Container(
                  height: 61.h,
                  width: 280.w,
                  decoration: BoxDecoration(
                    color: blue,
                    borderRadius: BorderRadius.circular(50),
                  ),
                  child: Center(
                    child: Text(
                      "Create Account",
                      style: lato(
                        fontWeight: FontWeight.bold,
                        fontSize: 18.sp,
                        color: white,
                      ),
                    ),
                  ),
                ),
              ),
              SizedBox(height: 45.h),
              Row(
                children: [
                  Text(
                    "Already have an account?",
                    style: lato(
                      color: white,
                      fontSize: 16,
                      fontWeight: FontWeight.normal,
                    ),
                  ),
                ],
              ),

              SizedBox(height: 20.h),
              GestureDetector(
                onTap: () {
                  Get.offNamed(Routes.login);
                },
                child: Container(
                  height: 58.h,
                  width: 280.w,
                  decoration: BoxDecoration(
                    color: white,
                    borderRadius: BorderRadius.circular(50),
                  ),
                  child: Center(
                    child: Text(
                      "Sign in",
                      style: lato(
                        fontWeight: FontWeight.bold,
                        fontSize: 18.sp,
                        color: blue,
                      ),
                    ),
                  ),
                ),
              ),
              Spacer(flex: 56),

              Text(
                "          By signing up, you agree to the Terms of Service and                ",
                style: lato(
                  color: white,
                  fontSize: 12.sp,
                  fontWeight: FontWeight.normal,
                ),
              ),
              Text(
                "    Privacy Policy including Cookie Use",
                style: lato(
                  color: white,
                  fontSize: 12.sp,
                  fontWeight: FontWeight.normal,
                ),
              ),
              Spacer(),
            ],
          ),
        ),
      ),
    );
  }
}
